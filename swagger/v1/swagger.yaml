openapi: 3.0.1
info:
  title: API V1
  description: API documentation for V1
  version: v1
paths:
  /api/v1/users:
    get:
      tags:
        - Users
      summary: List all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      summary: Create a new user
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/users/{id}:
    get:
      tags:
        - Users
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Users
      summary: Update a user by ID
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - Users
      summary: Delete a user by ID
      security:
        - BearerAuth: [ ]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/users/{id}/followers:
    get:
      summary: Get followers of the user
      tags:
        - Follows
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of followers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/v1/users/{id}/followees:
    get:
      summary: Get followees of the user
      tags:
        - Follows
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of followees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Follow or unfollow a user
      tags:
        - Follows
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action_type:
                  type: string
                  enum: [ follow, unfollow ]
                  example: "follow|unfollow"
                user_id:
                  type: string
                  example: "123"
      responses:
        '201':
          description: Follow action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully followed user
        '200':
          description: Unfollow action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully unfollowed user
        '404':
          description: Follow relationship not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '422':
          description: Invalid action
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/v1/users/{id}/clocks:
    post:
      summary: Clock in or clock out a user
      tags:
        - Clocks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action_type:
                  type: string
                  enum: [ clock_in, clock_out ]
                  example: "clock_in|clock_out"
      responses:
        201:
          description: Clocked in successfully
        200:
          description: Clocked out successfully
        422:
          description: Unprocessable Entity
    get:
      summary: Get list of clock records for a user
      tags:
        - Clocks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: List of clock records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Clock'
  /api/v1/users/{id}/followees_clock/daily:
    get:
      summary: Get followees' clock daily records
      tags:
        - Clocks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: User ID
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Date to filter clock daily records
      responses:
        '200':
          description: A list of followees' clock daily records
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: string
                    clock_daily:
                      $ref: '#/components/schemas/ClockDaily'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /api/v1/users/{id}/followees_clock/weekly:
    get:
      summary: Get followees' clock weekly records
      tags:
        - Clocks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: User ID
        - name: week_start
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Week start date to filter clock weekly records
      responses:
        '200':
          description: A list of followees' clock weekly records
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: string
                    clock_weekly:
                      $ref: '#/components/schemas/ClockWeekly'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
    Clock:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: integer
        clock_in:
          type: string
          format: date-time
        clock_out:
          type: string
          format: date-time
        duration:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ClockDaily:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        date:
          type: string
          format: date
        total_duration:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    ClockWeekly:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        week_start:
          type: string
          format: date
        total_duration:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        error:
          type: string